import java.text.SimpleDateFormat

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.21'
    repositories {
        google()
        jcenter()

        // Add repository
        maven {
            url 'https://maven.fabric.io/public'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        // Check for v3.1.2 or higher
        classpath 'com.google.gms:google-services:4.2.0'

        // Add fabric dependency
        classpath 'io.fabric.tools:gradle:1.29.0'
    }
}

allprojects {
    repositories {
        google() // Google's Maven repository
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}



// Define versions in a single place
ext {
    // SDK Level and Tools
    // https://source.android.com/setup/start/build-numbers
    // -----------------------------------------------------
    androidMinSdkVersion = 22 // Lollipop 5.1
    androidTargetSdkVersion = 28 // Pie 9.0
    androidCompileSdkVersion = 28
    buildToolsVersion = '27.0.3' // Android SDK Build Tools - Versions: https://developer.android.com/studio/releases/build-tools.html

    // Google Products & Support library dependencies
    // AndroidX Versions: https://developer.android.com/jetpack/androidx/versions
    // --------------------------------------------------
    appCompatVersion = '1.1.0-rc01' // https://developer.android.com/jetpack/androidx/releases/appcompat
    constraintLayoutVersion = '1.1.3' // https://developer.android.com/reference/android/support/constraint/ConstraintLayout
    archComponentVersion = '2.1.0-rc01' // https://developer.android.com/topic/libraries/architecture/adding-components
    lifecycleVersion = '2.0.0' // https://developer.android.com/jetpack/androidx/releases/lifecycle
    firebaseVersion = '16.0.9' // https://firebase.google.com/docs/android/setup
    crashlyticsVersion = '2.10.1' // https://firebase.google.com/docs/crashlytics/get-started
    coreKtxVersion = '1.0.2' // https://developer.android.com/kotlin/ktx
    androidMaterialVersion = '1.1.0-alpha07' // https://github.com/material-components/material-components-android/releases

    // 3rd party library dependencies
    // --------------------------------------------------
    daggerVersion = '2.22.1' // https://github.com/google/dagger
    timberLibraryVersion = '4.7.1' // https://github.com/JakeWharton/timber
    leakcanaryLibraryVersion = '2.0-alpha-3' // https://github.com/square/leakcanary/releases
    rxJavaVersion = '2.2.8' // https://github.com/ReactiveX/RxJava/releases
    rxAndroidVersion = '2.1.1' // https://github.com/ReactiveX/RxAndroid/releases
    retrofitVersion = '2.5.0' // https://square.github.io/retrofit/
    gsonVersion = '2.8.5' // https://github.com/google/gson
    okHttpVersion = '3.14.2' // https://github.com/square/okhttp
    daggerVersion = '2.16' // https://github.com/google/dagger

    // Unit test dependencies
    // https://developer.android.com/training/testing/unit-testing/local-unit-tests
    // --------------------------------------------------
    junitVersion = '4.12'
    mockitoVersion = '2.8.47'
    androidTestRunnerVersion = '1.1.1'
    espressoVersion = '3.1.1'
}


//
// Utility methods used in the build
//

static def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

static def buildTime() {
    def df = new SimpleDateFormat("EEE, d MMM, yyyy hh:mm aaa z")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    defaultConfig {
        applicationId "com.example.android.barebone" // TODO UPDATE APP-ID
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"

        versionNameSuffix "-${gitSha()}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        testOptions {
            unitTests.returnDefaultValues = true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility = JavaVersion.VERSION_1_8
        sourceCompatibility = JavaVersion.VERSION_1_8
    }

    dataBinding {
        // https://developer.android.com/topic/libraries/data-binding/start
        enabled = true
    }
}

// Configure ktlint plugin
// Use `./gradlew ktlintFormat` command to format code.
// https://github.com/jlleitschuh/ktlint-gradle#configuration
ktlint {
    debug = true
    android = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Google Products & Support library dependencies
    // --------------------------------------------------
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"
    implementation "com.google.android.material:material:$rootProject.androidMaterialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.viewpager2:viewpager2:$rootProject.viewPager2Version"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.lifecycleVersion"


    // Firebase and Crashlytics platform
    // --------------------------------------------------
    implementation "com.google.firebase:firebase-core:$rootProject.firebaseVersion"
    implementation "com.crashlytics.sdk.android:crashlytics:$rootProject.crashlyticsVersion"

    //
    // 3rd-Party Libraries
    // --------------------------------------------------

    // Timber for logging
    implementation "com.jakewharton.timber:timber:$rootProject.timberLibraryVersion"

    // Leak canary - memory leak (DEBUG only)
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanaryLibraryVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    // OkHttp Client
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpVersion"

    // Gson for JSON
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // --------------------------------------------------
    // ReactiveX / RxJava stream related libraries
    // --------------------------------------------------
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"

    // Dagger (dependency injection)
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    //
    // Unit Tests
    // --------------------------------------------------
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.mockito:mockito-inline:$rootProject.mockitoVersion" // Mockito framework
    androidTestImplementation "androidx.test:runner:$rootProject.androidTestRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
}


// Must be applied at the bottom - See https://firebase.google.com/docs/android/setup
apply plugin: 'com.google.gms.google-services' // Google Play services Gradle plugin